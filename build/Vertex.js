/**
 * @file Vertex class.
 * @author SÃ©bastien Robaszkiewicz [hello@robi.me]
 */

'use strict';

var _createClass = require("babel-runtime/helpers/create-class")["default"];

var _classCallCheck = require("babel-runtime/helpers/class-call-check")["default"];

var Vertex = (function () {
  function Vertex() {
    var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

    _classCallCheck(this, Vertex);

    this.canvasMargin = config.canvasMargin || 0;

    this.x = Math.random() * (1 + 2 * this.canvasMargin) - this.canvasMargin; // normalized
    this.y = Math.random() * (1 + 2 * this.canvasMargin) - this.canvasMargin; // normalized
    this.z = Math.random();

    this.minRadius = config.minRadius || 4; // pixels
    this.radiusVariance = config.radiusVariance || 6; // pixels
    this.radius = this.radiusVariance * this.z + this.minRadius;

    this.velocityFactor = config.velocityFactor || 7; // pixels per second
    this.vInitX = Math.random() * 2 - 1;
    this.vInitY = Math.random() * 2 - 1;
    this.dBeta = 0;
    this.dGamma = 0;

    this.minFadeinDuration = config.minFadeinDuration || 3;
    this.fadeInDurationVariance = config.fadeInDurationVariance || 2;
    this.fadeInDuration = this.minFadeinDuration + (1 - this.z) * this.fadeInDurationVariance; // seconds

    this.opacity = 0;

    this.coordinates = {}; // in pixels
  }

  _createClass(Vertex, [{
    key: "update",
    value: function update(elapsedTime, dt, w, h) {
      this.x += this.vx / w * dt;
      this.y += this.vy / h * dt;

      if (this.x > 1 + this.canvasMargin) this.x = -this.canvasMargin;else if (this.x < -this.canvasMargin) this.x = 1 + this.canvasMargin;

      if (this.y > 1 + this.canvasMargin) this.y = -this.canvasMargin;else if (this.y < -this.canvasMargin) this.y = 1 + this.canvasMargin;

      this.coordinates.x = this.x * w;
      this.coordinates.y = this.y * h;

      this.opacity = 0.05 * Math.min(elapsedTime / this.fadeInDuration, 1);
    }
  }, {
    key: "draw",
    value: function draw(ctx, dt) {
      ctx.fillStyle = "rgba(0, 0, 0, " + this.opacity + ")";
      ctx.beginPath();
      ctx.arc(this.coordinates.x, this.coordinates.y, this.radius, 0, Math.PI * 2, false);
      ctx.fill();
    }
  }, {
    key: "onOrientation",
    value: function onOrientation(dBeta, dGamma) {
      this.dBeta = dBeta;
      this.dGamma = dGamma;
    }
  }, {
    key: "vx",
    get: function get() {
      return this.velocityFactor * (this.vInitX + this.dGamma * this.z * 0.2);
    }
  }, {
    key: "vy",
    get: function get() {
      return this.velocityFactor * (this.vInitY + this.dBeta * this.z * 0.2);
    }
  }]);

  return Vertex;
})();

module.exports = Vertex;
//# sourceMappingURL=data:application/json;base64,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Q0FBQSxBQUFDLENBQUM7S0FDekU7OztTQUVLLGVBQUc7QUFDUCxhQUFPLElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFBLEFBQUMsQ0FBQztLQUN4RTs7O1NBakNHLE1BQU07OztBQW9FWixNQUFNLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyIsImZpbGUiOiJzcmMvanMvVmVydGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZSBWZXJ0ZXggY2xhc3MuXG4gKiBAYXV0aG9yIFPDqWJhc3RpZW4gUm9iYXN6a2lld2ljeiBbaGVsbG9Acm9iaS5tZV1cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNsYXNzIFZlcnRleCB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZyA9IHt9KSB7XG4gICAgdGhpcy5jYW52YXNNYXJnaW4gPSBjb25maWcuY2FudmFzTWFyZ2luIHx8IDA7XG5cbiAgICB0aGlzLnggPSBNYXRoLnJhbmRvbSgpICogKDEgKyAyICogdGhpcy5jYW52YXNNYXJnaW4pIC0gdGhpcy5jYW52YXNNYXJnaW47IC8vIG5vcm1hbGl6ZWRcbiAgICB0aGlzLnkgPSBNYXRoLnJhbmRvbSgpICogKDEgKyAyICogdGhpcy5jYW52YXNNYXJnaW4pIC0gdGhpcy5jYW52YXNNYXJnaW47IC8vIG5vcm1hbGl6ZWRcbiAgICB0aGlzLnogPSBNYXRoLnJhbmRvbSgpO1xuXG4gICAgdGhpcy5taW5SYWRpdXMgPSBjb25maWcubWluUmFkaXVzIHx8IDQ7IC8vIHBpeGVsc1xuICAgIHRoaXMucmFkaXVzVmFyaWFuY2UgPSBjb25maWcucmFkaXVzVmFyaWFuY2UgfHwgNjsgLy8gcGl4ZWxzXG4gICAgdGhpcy5yYWRpdXMgPSB0aGlzLnJhZGl1c1ZhcmlhbmNlICogdGhpcy56ICsgdGhpcy5taW5SYWRpdXM7XG5cbiAgICB0aGlzLnZlbG9jaXR5RmFjdG9yID0gY29uZmlnLnZlbG9jaXR5RmFjdG9yIHx8IDc7IC8vIHBpeGVscyBwZXIgc2Vjb25kXG4gICAgdGhpcy52SW5pdFggPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgdGhpcy52SW5pdFkgPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgdGhpcy5kQmV0YSA9IDA7XG4gICAgdGhpcy5kR2FtbWEgPSAwO1xuXG4gICAgdGhpcy5taW5GYWRlaW5EdXJhdGlvbiA9IGNvbmZpZy5taW5GYWRlaW5EdXJhdGlvbiB8fCAzO1xuICAgIHRoaXMuZmFkZUluRHVyYXRpb25WYXJpYW5jZSA9IGNvbmZpZy5mYWRlSW5EdXJhdGlvblZhcmlhbmNlIHx8IDI7XG4gICAgdGhpcy5mYWRlSW5EdXJhdGlvbiA9IHRoaXMubWluRmFkZWluRHVyYXRpb24gKyAoMSAtIHRoaXMueikgKiB0aGlzLmZhZGVJbkR1cmF0aW9uVmFyaWFuY2U7IC8vIHNlY29uZHNcblxuICAgIHRoaXMub3BhY2l0eSA9IDA7XG5cbiAgICB0aGlzLmNvb3JkaW5hdGVzID0ge307IC8vIGluIHBpeGVsc1xuICB9XG5cbiAgZ2V0IHZ4KCkge1xuICAgIHJldHVybiB0aGlzLnZlbG9jaXR5RmFjdG9yICogKHRoaXMudkluaXRYICsgdGhpcy5kR2FtbWEgKiB0aGlzLnogKiAwLjIpO1xuICB9XG5cbiAgZ2V0IHZ5KCkge1xuICAgIHJldHVybiB0aGlzLnZlbG9jaXR5RmFjdG9yICogKHRoaXMudkluaXRZICsgdGhpcy5kQmV0YSAqIHRoaXMueiAqIDAuMik7XG4gIH1cblxuICB1cGRhdGUoZWxhcHNlZFRpbWUsIGR0LCB3LCBoKSB7XG4gICAgdGhpcy54ICs9IHRoaXMudnggLyB3ICogZHQ7XG4gICAgdGhpcy55ICs9IHRoaXMudnkgLyBoICogZHQ7XG5cbiAgICBpZiAodGhpcy54ID4gMSArIHRoaXMuY2FudmFzTWFyZ2luKVxuICAgICAgdGhpcy54ID0gLXRoaXMuY2FudmFzTWFyZ2luO1xuICAgIGVsc2UgaWYgKHRoaXMueCA8IC10aGlzLmNhbnZhc01hcmdpbilcbiAgICAgIHRoaXMueCA9IDEgKyB0aGlzLmNhbnZhc01hcmdpbjtcblxuICAgIGlmICh0aGlzLnkgPiAxICsgdGhpcy5jYW52YXNNYXJnaW4pXG4gICAgICB0aGlzLnkgPSAtdGhpcy5jYW52YXNNYXJnaW47XG4gICAgZWxzZSBpZiAodGhpcy55IDwgLXRoaXMuY2FudmFzTWFyZ2luKVxuICAgICAgdGhpcy55ID0gMSArIHRoaXMuY2FudmFzTWFyZ2luO1xuXG4gICAgdGhpcy5jb29yZGluYXRlcy54ID0gdGhpcy54ICogdztcbiAgICB0aGlzLmNvb3JkaW5hdGVzLnkgPSB0aGlzLnkgKiBoO1xuXG4gICAgdGhpcy5vcGFjaXR5ID0gMC4wNSAqIE1hdGgubWluKGVsYXBzZWRUaW1lIC8gdGhpcy5mYWRlSW5EdXJhdGlvbiwgMSk7XG4gIH1cblxuICBkcmF3KGN0eCwgZHQpIHtcbiAgICBjdHguZmlsbFN0eWxlID0gXCJyZ2JhKDAsIDAsIDAsIFwiICsgdGhpcy5vcGFjaXR5ICsgXCIpXCI7XG4gICAgY3R4LmJlZ2luUGF0aCgpO1xuICAgIGN0eC5hcmModGhpcy5jb29yZGluYXRlcy54LCB0aGlzLmNvb3JkaW5hdGVzLnksIHRoaXMucmFkaXVzLCAwLCBNYXRoLlBJICogMiwgZmFsc2UpO1xuICAgIGN0eC5maWxsKCk7XG4gIH1cblxuICBvbk9yaWVudGF0aW9uKGRCZXRhLCBkR2FtbWEpIHtcbiAgICB0aGlzLmRCZXRhID0gZEJldGE7XG4gICAgdGhpcy5kR2FtbWEgPSBkR2FtbWE7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBWZXJ0ZXg7XG4iXX0=